;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name climbr.behaviour.behaviour, :imports nil, :requires {a climbr.app_state, u climbr.utils.utils, climbr.behaviour.utils climbr.behaviour.utils, climbr.matter.matter climbr.matter.matter, cljs.core.async cljs.core.async, climbr.app_state climbr.app_state, climbr.utils.utils climbr.utils.utils, m climbr.matter.matter, k climbr.controls.keyboard, climbr.controls.keyboard climbr.controls.keyboard}, :uses {<! cljs.core.async, chan cljs.core.async, tap cljs.core.async, h1-holds? climbr.behaviour.utils, h2-holds? climbr.behaviour.utils}, :defs {init-boulder-touch-events! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/behaviour.cljs", :line 10, :column 7, :end-line 10, :end-column 33, :arglists (quote ([engine]))}, :name climbr.behaviour.behaviour/init-boulder-touch-events!, :variadic false, :file "src/climbr/behaviour/behaviour.cljs", :end-column 33, :method-params ([engine]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([engine]))}, fetch-climber-part {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/behaviour.cljs", :line 43, :column 8, :end-line 43, :end-column 26, :private true, :arglists (quote ([part]))}, :private true, :name climbr.behaviour.behaviour/fetch-climber-part, :variadic false, :file "src/climbr/behaviour/behaviour.cljs", :end-column 26, :method-params ([part]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([part]))}, fetch-hand {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/behaviour.cljs", :line 45, :column 8, :end-line 45, :end-column 18, :private true, :arglists (quote ([hand]))}, :private true, :name climbr.behaviour.behaviour/fetch-hand, :variadic false, :file "src/climbr/behaviour/behaviour.cljs", :end-column 18, :method-params ([hand]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hand]))}, fetch-free-hand {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/behaviour.cljs", :line 60, :column 8, :end-line 60, :end-column 23, :private true, :arglists (quote ([]))}, :private true, :name climbr.behaviour.behaviour/fetch-free-hand, :variadic false, :file "src/climbr/behaviour/behaviour.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-boulder-for-hand {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/behaviour.cljs", :line 70, :column 8, :end-line 70, :end-column 28, :private true, :arglists (quote ([hand-name]))}, :private true, :name climbr.behaviour.behaviour/get-boulder-for-hand, :variadic false, :file "src/climbr/behaviour/behaviour.cljs", :end-column 28, :method-params ([hand-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hand-name]))}, remove-boulder-for-hand! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/behaviour.cljs", :line 79, :column 8, :end-line 79, :end-column 32, :private true, :arglists (quote ([hand-name]))}, :private true, :name climbr.behaviour.behaviour/remove-boulder-for-hand!, :variadic false, :file "src/climbr/behaviour/behaviour.cljs", :end-column 32, :method-params ([hand-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hand-name]))}, def- {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/behaviour.cljs", :line 89, :column 11, :end-line 89, :end-column 15, :macro true, :arglists (quote ([item value]))}, :name climbr.behaviour.behaviour/def-, :variadic false, :file "src/climbr/behaviour/behaviour.cljs", :end-column 15, :method-params ([&form &env item value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :macro true, :end-line 89, :max-fixed-arity 4, :fn-var true, :arglists (quote ([item value]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:climber :h1-holds :else :h2 :h1 :h2-holds def}, :order [:else :h1-holds :h2-holds :climber :h1 :h2 def]}, :doc nil}