{:rename-macros {}, :renames {}, :use-macros {for-each climbr.utils.macros, go cljs.core.async.macros, lets climbr.utils.macros, compute climbr.utils.macros}, :excludes #{}, :name climbr.behaviour.user_actions, :imports nil, :requires {a climbr.app_state, u climbr.utils.utils, climbr.matter.matter climbr.matter.matter, cljs.core.async cljs.core.async, climbr.app_state climbr.app_state, climbr.utils.utils climbr.utils.utils, m climbr.matter.matter, climbr.figures.climber climbr.figures.climber, k climbr.controls.keyboard, climbr.controls.keyboard climbr.controls.keyboard, c climbr.figures.climber}, :uses {<! cljs.core.async, chan cljs.core.async, tap cljs.core.async, in? climbr.utils.utils}, :defs {connect-hand-and-boulder {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 181, :column 8, :end-line 181, :end-column 32, :private true, :arglists (quote ([hand boulder engine]))}, :private true, :name climbr.behaviour.user_actions/connect-hand-and-boulder, :variadic false, :file "src/climbr/behaviour/user_actions.cljs", :end-column 32, :method-params ([hand boulder engine]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 181, :end-line 181, :max-fixed-arity 3, :fn-var true, :arglists (quote ([hand boulder engine]))}, holds-hand? {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 113, :column 8, :end-line 113, :end-column 19, :private true, :arglists (quote ([hand]))}, :private true, :name climbr.behaviour.user_actions/holds-hand?, :variadic false, :file "src/climbr/behaviour/user_actions.cljs", :end-column 19, :method-params ([hand]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 113, :end-line 113, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hand]))}, setup-climber-grab-events! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 37, :column 7, :end-line 37, :end-column 33, :arglists (quote ([engine]))}, :name climbr.behaviour.user_actions/setup-climber-grab-events!, :variadic false, :file "src/climbr/behaviour/user_actions.cljs", :end-column 33, :method-params ([engine]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([engine]))}, lunge! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 117, :column 8, :end-line 117, :end-column 14, :private true, :arglists (quote ([what _ where _ opts]))}, :private true, :name climbr.behaviour.user_actions/lunge!, :variadic false, :file "src/climbr/behaviour/user_actions.cljs", :end-column 14, :method-params ([what _ where _ opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 5, :fn-var true, :arglists (quote ([what _ where _ opts]))}, get-boulder-for-hand {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 167, :column 8, :end-line 167, :end-column 28, :private true, :arglists (quote ([hand-name]))}, :private true, :name climbr.behaviour.user_actions/get-boulder-for-hand, :variadic false, :file "src/climbr/behaviour/user_actions.cljs", :end-column 28, :method-params ([hand-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 167, :end-line 167, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hand-name]))}, holds-nothing? {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 107, :column 8, :end-line 107, :end-column 22, :private true, :arglists (quote ([]))}, :private true, :name climbr.behaviour.user_actions/holds-nothing?, :variadic false, :file "src/climbr/behaviour/user_actions.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, holds-one? {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 108, :column 8, :end-line 108, :end-column 18, :private true, :arglists (quote ([]))}, :private true, :name climbr.behaviour.user_actions/holds-one?, :variadic false, :file "src/climbr/behaviour/user_actions.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, h1-holds? {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 110, :column 8, :end-line 110, :end-column 17, :private true, :arglists (quote ([]))}, :private true, :name climbr.behaviour.user_actions/h1-holds?, :variadic false, :file "src/climbr/behaviour/user_actions.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, on-the-ground? {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 102, :column 8, :end-line 102, :end-column 22, :private true, :arglists (quote ([]))}, :private true, :name climbr.behaviour.user_actions/on-the-ground?, :variadic false, :file "src/climbr/behaviour/user_actions.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, fetch-climber-part {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 207, :column 8, :end-line 207, :end-column 26, :private true, :arglists (quote ([part]))}, :private true, :name climbr.behaviour.user_actions/fetch-climber-part, :variadic false, :file "src/climbr/behaviour/user_actions.cljs", :end-column 26, :method-params ([part]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 207, :end-line 207, :max-fixed-arity 1, :fn-var true, :arglists (quote ([part]))}, setup-climber-release-events! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 77, :column 7, :end-line 77, :end-column 36, :arglists (quote ([engine]))}, :name climbr.behaviour.user_actions/setup-climber-release-events!, :variadic false, :file "src/climbr/behaviour/user_actions.cljs", :end-column 36, :method-params ([engine]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 1, :fn-var true, :arglists (quote ([engine]))}, bind-keys! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 158, :column 8, :end-line 158, :end-column 18, :private true, :arglists (quote ([external-keypressed-chan key-actions]))}, :private true, :name climbr.behaviour.user_actions/bind-keys!, :variadic false, :file "src/climbr/behaviour/user_actions.cljs", :end-column 18, :method-params ([external-keypressed-chan key-actions]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 2, :fn-var true, :arglists (quote ([external-keypressed-chan key-actions]))}, h2-holds? {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 111, :column 8, :end-line 111, :end-column 17, :private true, :arglists (quote ([]))}, :private true, :name climbr.behaviour.user_actions/h2-holds?, :variadic false, :file "src/climbr/behaviour/user_actions.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, fetch-free-hand {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 209, :column 8, :end-line 209, :end-column 23, :private true, :arglists (quote ([]))}, :private true, :name climbr.behaviour.user_actions/fetch-free-hand, :variadic false, :file "src/climbr/behaviour/user_actions.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 209, :end-line 209, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, remove-boulder-for-hand! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 174, :column 8, :end-line 174, :end-column 32, :private true, :arglists (quote ([hand-name]))}, :private true, :name climbr.behaviour.user_actions/remove-boulder-for-hand!, :variadic false, :file "src/climbr/behaviour/user_actions.cljs", :end-column 32, :method-params ([hand-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 174, :end-line 174, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hand-name]))}, holds-both? {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 109, :column 8, :end-line 109, :end-column 19, :private true, :arglists (quote ([]))}, :private true, :name climbr.behaviour.user_actions/holds-both?, :variadic false, :file "src/climbr/behaviour/user_actions.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, fetch-hands {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 191, :column 7, :end-line 191, :end-column 18, :arglists (quote ([hand]))}, :name climbr.behaviour.user_actions/fetch-hands, :variadic false, :file "src/climbr/behaviour/user_actions.cljs", :end-column 18, :method-params ([hand]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 191, :end-line 191, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hand]))}, setup-climber-moves! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 11, :column 7, :end-line 11, :end-column 27, :arglists (quote ([]))}, :name climbr.behaviour.user_actions/setup-climber-moves!, :variadic false, :file "src/climbr/behaviour/user_actions.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, climbr.utils.macros climbr.utils.macros}, :cljs.analyzer/constants {:seen #{:y :climber :h1-holds :free-hand :else :top :horizonal :free :can-grab :both-hands :vertical :recur :hand :up :power :with :right :both :left-hand :h2 :x :engine :h1 :body :h2-holds :right-hand :top-TODO :left :to}, :order [:up :left :right :both-hands :to :top :body :free-hand :else :left-hand :top-TODO :with :power :right-hand :h1 :h2 :can-grab :engine :recur :both :h1-holds :h2-holds :hand :horizonal :vertical :free :x :y :climber]}, :doc nil}