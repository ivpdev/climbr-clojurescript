;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name climbr.behaviour.user_actions, :imports nil, :requires {m climbr.matter.matter, climbr.matter.matter climbr.matter.matter, c climbr.figures.climber, climbr.figures.climber climbr.figures.climber, a climbr.app_state, climbr.app_state climbr.app_state, k climbr.controls.keyboard, climbr.controls.keyboard climbr.controls.keyboard, cljs.core.async cljs.core.async}, :uses {<! cljs.core.async, chan cljs.core.async, tap cljs.core.async}, :defs {def- {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 11, :column 11, :end-line 11, :end-column 15, :macro true, :arglists (quote ([item value]))}, :name climbr.behaviour.user_actions/def-, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 15, :method-params ([&form &env item value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :macro true, :end-line 11, :max-fixed-arity 4, :fn-var true, :arglists (quote ([item value]))}, connect-hand-and-boulder {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 162, :column 8, :end-line 162, :end-column 32, :private true, :arglists (quote ([hand boulder engine]))}, :private true, :name climbr.behaviour.user_actions/connect-hand-and-boulder, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 32, :method-params ([hand boulder engine]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 162, :end-line 162, :max-fixed-arity 3, :fn-var true, :arglists (quote ([hand boulder engine]))}, holds-hand? {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 105, :column 8, :end-line 105, :end-column 19, :private true, :arglists (quote ([hand]))}, :private true, :name climbr.behaviour.user_actions/holds-hand?, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 19, :method-params ([hand]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hand]))}, setup-climber-grab-events! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 39, :column 7, :end-line 39, :end-column 33, :arglists (quote ([engine]))}, :name climbr.behaviour.user_actions/setup-climber-grab-events!, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 33, :method-params ([engine]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([engine]))}, lunge! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 109, :column 8, :end-line 109, :end-column 14, :private true, :arglists (quote ([what _ where]))}, :private true, :name climbr.behaviour.user_actions/lunge!, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 14, :method-params ([what _ where]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 3, :fn-var true, :arglists (quote ([what _ where]))}, get-boulder-for-hand {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 148, :column 8, :end-line 148, :end-column 28, :private true, :arglists (quote ([hand-name]))}, :private true, :name climbr.behaviour.user_actions/get-boulder-for-hand, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 28, :method-params ([hand-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hand-name]))}, holds-nothing? {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 99, :column 8, :end-line 99, :end-column 22, :private true, :arglists (quote ([]))}, :private true, :name climbr.behaviour.user_actions/holds-nothing?, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, holds-one? {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 100, :column 8, :end-line 100, :end-column 18, :private true, :arglists (quote ([]))}, :private true, :name climbr.behaviour.user_actions/holds-one?, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, h1-holds? {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 102, :column 8, :end-line 102, :end-column 17, :private true, :arglists (quote ([]))}, :private true, :name climbr.behaviour.user_actions/h1-holds?, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, on-the-ground? {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 94, :column 8, :end-line 94, :end-column 22, :private true, :arglists (quote ([]))}, :private true, :name climbr.behaviour.user_actions/on-the-ground?, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, fetch-climber-part {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 188, :column 8, :end-line 188, :end-column 26, :private true, :arglists (quote ([part]))}, :private true, :name climbr.behaviour.user_actions/fetch-climber-part, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 26, :method-params ([part]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 188, :end-line 188, :max-fixed-arity 1, :fn-var true, :arglists (quote ([part]))}, setup-climber-release-events! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 69, :column 7, :end-line 69, :end-column 36, :arglists (quote ([engine]))}, :name climbr.behaviour.user_actions/setup-climber-release-events!, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 36, :method-params ([engine]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([engine]))}, bind-keys! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 139, :column 8, :end-line 139, :end-column 18, :private true, :arglists (quote ([key-actions]))}, :private true, :name climbr.behaviour.user_actions/bind-keys!, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 18, :method-params ([key-actions]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 139, :end-line 139, :max-fixed-arity 1, :fn-var true, :arglists (quote ([key-actions]))}, h2-holds? {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 103, :column 8, :end-line 103, :end-column 17, :private true, :arglists (quote ([]))}, :private true, :name climbr.behaviour.user_actions/h2-holds?, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, fetch-free-hand {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 190, :column 8, :end-line 190, :end-column 23, :private true, :arglists (quote ([]))}, :private true, :name climbr.behaviour.user_actions/fetch-free-hand, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 190, :end-line 190, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, remove-boulder-for-hand! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 155, :column 8, :end-line 155, :end-column 32, :private true, :arglists (quote ([hand-name]))}, :private true, :name climbr.behaviour.user_actions/remove-boulder-for-hand!, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 32, :method-params ([hand-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 155, :end-line 155, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hand-name]))}, holds-both? {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 101, :column 8, :end-line 101, :end-column 19, :private true, :arglists (quote ([]))}, :private true, :name climbr.behaviour.user_actions/holds-both?, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, fetch-hands {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 172, :column 7, :end-line 172, :end-column 18, :arglists (quote ([hand]))}, :name climbr.behaviour.user_actions/fetch-hands, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 18, :method-params ([hand]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 172, :end-line 172, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hand]))}, setup-climber-moves! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 14, :column 7, :end-line 14, :end-column 27, :arglists (quote ([]))}, :name climbr.behaviour.user_actions/setup-climber-moves!, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:y :climber :h1-holds :free-hand :else :top :horizonal :free :can-grab :both-hands :vertical :recur :hand :up :right :both :left-hand :h2 :x :engine :h1 :body :h2-holds :right-hand :left def :to}, :order [def :up :left :right :both-hands :to :top :body :free-hand :else :left-hand :right-hand :h1 :h2 :can-grab :engine :recur :both :h1-holds :h2-holds :hand :horizonal :vertical :free :x :y :climber]}, :doc nil}