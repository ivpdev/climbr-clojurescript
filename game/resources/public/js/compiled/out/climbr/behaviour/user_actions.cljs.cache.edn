{:rename-macros {}, :renames {}, :use-macros {for-each climbr.utils.macros, go cljs.core.async.macros, lets climbr.utils.macros, compute climbr.utils.macros}, :excludes #{}, :name climbr.behaviour.user_actions, :imports nil, :requires {a climbr.app_state, figures climbr.figures.figures, u climbr.utils.utils, climbr.matter.matter climbr.matter.matter, cljs.core.async cljs.core.async, climbr.app_state climbr.app_state, climbr.utils.utils climbr.utils.utils, m climbr.matter.matter, climbr.figures.climber climbr.figures.climber, k climbr.controls.keyboard, climbr.controls.keyboard climbr.controls.keyboard, c climbr.figures.climber, clojure.data clojure.data, climbr.figures.figures climbr.figures.figures}, :uses {not-nil? climbr.utils.utils, <! cljs.core.async, diff clojure.data, chan cljs.core.async, tap cljs.core.async, in? climbr.utils.utils}, :defs {connect-hand-and-boulder {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 210, :column 8, :end-line 210, :end-column 32, :private true, :arglists (quote ([hand boulder engine]))}, :private true, :name climbr.behaviour.user_actions/connect-hand-and-boulder, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 32, :method-params ([hand boulder engine]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 210, :end-line 210, :max-fixed-arity 3, :fn-var true, :arglists (quote ([hand boulder engine]))}, hooked-nothing? {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 133, :column 8, :end-line 133, :end-column 23, :private true, :arglists (quote ([]))}, :private true, :name climbr.behaviour.user_actions/hooked-nothing?, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, fetch-hold#free-hand {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 253, :column 8, :end-line 253, :end-column 28, :private true, :arglists (quote ([]))}, :private true, :name climbr.behaviour.user_actions/fetch-hold#free-hand, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 28, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 253, :end-line 253, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, setup-climber-hook-events! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 49, :column 7, :end-line 49, :end-column 33, :arglists (quote ([engine]))}, :name climbr.behaviour.user_actions/setup-climber-hook-events!, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 33, :method-params ([engine]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([engine]))}, h1-hooked? {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 136, :column 8, :end-line 136, :end-column 18, :private true, :arglists (quote ([]))}, :private true, :name climbr.behaviour.user_actions/h1-hooked?, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 136, :end-line 136, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, hooked-one? {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 134, :column 8, :end-line 134, :end-column 19, :private true, :arglists (quote ([]))}, :private true, :name climbr.behaviour.user_actions/hooked-one?, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, lunge! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 142, :column 8, :end-line 142, :end-column 14, :private true, :arglists (quote ([what _ where _ opts]))}, :private true, :name climbr.behaviour.user_actions/lunge!, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 14, :method-params ([what _ where _ opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 142, :end-line 142, :max-fixed-arity 5, :fn-var true, :arglists (quote ([what _ where _ opts]))}, hand-above-body? {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 126, :column 8, :end-line 126, :end-column 24, :private true, :arglists (quote ([]))}, :private true, :name climbr.behaviour.user_actions/hand-above-body?, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-hooked-boulder-for-hand {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 196, :column 8, :end-line 196, :end-column 35, :private true, :arglists (quote ([hand-name]))}, :private true, :name climbr.behaviour.user_actions/get-hooked-boulder-for-hand, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 35, :method-params ([hand-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 196, :end-line 196, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hand-name]))}, h2-hooked? {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 137, :column 8, :end-line 137, :end-column 18, :private true, :arglists (quote ([]))}, :private true, :name climbr.behaviour.user_actions/h2-hooked?, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 137, :end-line 137, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, fetch-hook#free-hand {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 267, :column 8, :end-line 267, :end-column 28, :private true, :arglists (quote ([]))}, :private true, :name climbr.behaviour.user_actions/fetch-hook#free-hand, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 28, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 267, :end-line 267, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, holds-one? {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 139, :column 8, :end-line 139, :end-column 18, :private true, :arglists (quote ([]))}, :private true, :name climbr.behaviour.user_actions/holds-one?, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 139, :end-line 139, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, on-the-ground? {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 114, :column 8, :end-line 114, :end-column 22, :private true, :arglists (quote ([]))}, :private true, :name climbr.behaviour.user_actions/on-the-ground?, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, fetch-climber-part {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 265, :column 8, :end-line 265, :end-column 26, :private true, :arglists (quote ([part]))}, :private true, :name climbr.behaviour.user_actions/fetch-climber-part, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 26, :method-params ([part]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 265, :end-line 265, :max-fixed-arity 1, :fn-var true, :arglists (quote ([part]))}, setup-climber-release-events! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 89, :column 7, :end-line 89, :end-column 36, :arglists (quote ([engine]))}, :name climbr.behaviour.user_actions/setup-climber-release-events!, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 36, :method-params ([engine]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 1, :fn-var true, :arglists (quote ([engine]))}, fetch-holding-hands {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 238, :column 8, :end-line 238, :end-column 27, :private true, :arglists (quote ([]))}, :private true, :name climbr.behaviour.user_actions/fetch-holding-hands, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 238, :end-line 238, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, bind-keys! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 187, :column 8, :end-line 187, :end-column 18, :private true, :arglists (quote ([external-keypressed-chan key-actions]))}, :private true, :name climbr.behaviour.user_actions/bind-keys!, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 18, :method-params ([external-keypressed-chan key-actions]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 187, :end-line 187, :max-fixed-arity 2, :fn-var true, :arglists (quote ([external-keypressed-chan key-actions]))}, hooked-both? {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 135, :column 8, :end-line 135, :end-column 20, :private true, :arglists (quote ([]))}, :private true, :name climbr.behaviour.user_actions/hooked-both?, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, remove-boulder-for-hand! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 203, :column 8, :end-line 203, :end-column 32, :private true, :arglists (quote ([hand-name]))}, :private true, :name climbr.behaviour.user_actions/remove-boulder-for-hand!, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 32, :method-params ([hand-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 203, :end-line 203, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hand-name]))}, is-standing? {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 119, :column 8, :end-line 119, :end-column 20, :private true, :arglists (quote ([]))}, :private true, :name climbr.behaviour.user_actions/is-standing?, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 119, :end-line 119, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, fetch-hands {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 220, :column 7, :end-line 220, :end-column 18, :arglists (quote ([hand]))}, :name climbr.behaviour.user_actions/fetch-hands, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 18, :method-params ([hand]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 220, :end-line 220, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hand]))}, setup-climber-moves! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :line 16, :column 7, :end-line 16, :end-column 27, :arglists (quote ([]))}, :name climbr.behaviour.user_actions/setup-climber-moves!, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/user_actions.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, climbr.utils.macros climbr.utils.macros}, :cljs.analyzer/constants {:seen #{:y :climber :hook#free-hand :else :top :holding :horizonal :both-hands :can-hook :hold#free-hand :vertical :recur :hand :up :hook#free :holding-hands :power :with :h2-hooked :right :both :left-hand :h2 :x :engine :h1 :h1-hooked :body :hold#free :right-hand :top-TODO :left :to :margin}, :order [:up :left :right :both-hands :to :top :body :holding-hands :hook#free-hand :else :left-hand :hold#free-hand :top-TODO :with :power :right-hand :h1 :h2 :can-hook :engine :recur :both :margin :h1-hooked :h2-hooked :hand :horizonal :vertical :hook#free :hold#free :holding :x :y :climber]}, :doc nil}