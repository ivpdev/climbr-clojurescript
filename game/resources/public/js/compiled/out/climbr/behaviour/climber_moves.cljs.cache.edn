{:rename-macros {}, :renames {}, :use-macros {go cljs.core.async.macros, compute climbr.utils.macros}, :excludes #{}, :name climbr.behaviour.climber_moves, :imports nil, :requires {p climbr.behaviour.position_watches, a climbr.app_state, climbr.matter.matter climbr.matter.matter, climber climbr.figures.climber, boulders climbr.figures.boulders, cljs.core.async cljs.core.async, climbr.app_state climbr.app_state, m climbr.matter.matter, climbr.figures.climber climbr.figures.climber, k climbr.controls.keyboard, climbr.controls.keyboard climbr.controls.keyboard, climbr.behaviour.position_watches climbr.behaviour.position_watches, climbr.figures.boulders climbr.figures.boulders}, :uses {<! cljs.core.async, chan cljs.core.async, tap cljs.core.async}, :defs {def- {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/climber_moves.cljs", :line 13, :column 11, :end-line 13, :end-column 15, :macro true, :arglists (quote ([item value]))}, :name climbr.behaviour.climber_moves/def-, :variadic false, :file "src/climbr/behaviour/climber_moves.cljs", :end-column 15, :method-params ([&form &env item value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :macro true, :end-line 13, :max-fixed-arity 4, :fn-var true, :arglists (quote ([item value]))}, watch-hand-can-grab-boulder! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/climber_moves.cljs", :line 16, :column 7, :end-line 16, :end-column 35, :arglists (quote ([])), :doc "Watch when hands are getting close enough to boulders for being able to grab them."}, :name climbr.behaviour.climber_moves/watch-hand-can-grab-boulder!, :variadic false, :file "src/climbr/behaviour/climber_moves.cljs", :end-column 35, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Watch when hands are getting close enough to boulders for being able to grab them."}, set-hand-holds! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/climber_moves.cljs", :line 31, :column 7, :end-line 31, :end-column 22, :arglists (quote ([engine hand boulder]))}, :name climbr.behaviour.climber_moves/set-hand-holds!, :variadic false, :file "src/climbr/behaviour/climber_moves.cljs", :end-column 22, :method-params ([engine hand boulder]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 3, :fn-var true, :arglists (quote ([engine hand boulder]))}, update-hand-can-hold! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/climber_moves.cljs", :line 43, :column 7, :end-line 43, :end-column 28, :arglists (quote ([action hand boulder]))}, :name climbr.behaviour.climber_moves/update-hand-can-hold!, :variadic false, :file "src/climbr/behaviour/climber_moves.cljs", :end-column 28, :method-params ([action hand boulder]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 3, :fn-var true, :arglists (quote ([action hand boulder]))}, release-hand-holds! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/climber_moves.cljs", :line 53, :column 7, :end-line 53, :end-column 26, :arglists (quote ([hand bolder]))}, :name climbr.behaviour.climber_moves/release-hand-holds!, :variadic false, :file "src/climbr/behaviour/climber_moves.cljs", :end-column 26, :method-params ([hand bolder]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 2, :fn-var true, :arglists (quote ([hand bolder]))}, watch-hand-reaches-top! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/climber_moves.cljs", :line 56, :column 7, :end-line 56, :end-column 30, :arglists (quote ([on-reach])), :doc "Watch when a hand is reaching top. When this happens the on-reach! function is called."}, :name climbr.behaviour.climber_moves/watch-hand-reaches-top!, :variadic false, :file "src/climbr/behaviour/climber_moves.cljs", :end-column 30, :method-params ([on-reach]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists (quote ([on-reach])), :doc "Watch when a hand is reaching top. When this happens the on-reach! function is called."}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, climbr.utils.macros climbr.utils.macros}, :cljs.analyzer/constants {:seen #{:when-far :when-near :climber :remove :h1-holds :is :can-grab :or :components :with :watch :h2 :approaching :distance :h1 :add :h2-holds :when-true def}, :order [def :climber :h1 :h2 :components :watch :approaching :with :when-near :when-far :or :distance :add :remove :h1-holds :h2-holds :can-grab :is :when-true]}, :doc nil}