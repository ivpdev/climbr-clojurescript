;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name climbr.behaviour.climber_moves, :imports nil, :requires {p climbr.behaviour.position_watches, a climbr.app_state, climbr.matter.matter climbr.matter.matter, climber climbr.figures.climber, boulders climbr.figures.boulders, cljs.core.async cljs.core.async, climbr.app_state climbr.app_state, m climbr.matter.matter, climbr.figures.climber climbr.figures.climber, k climbr.controls.keyboard, climbr.controls.keyboard climbr.controls.keyboard, climbr.behaviour.position_watches climbr.behaviour.position_watches, climbr.figures.boulders climbr.figures.boulders}, :uses {<! cljs.core.async, chan cljs.core.async, tap cljs.core.async}, :defs {def- {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/climber_moves.cljs", :line 11, :column 11, :end-line 11, :end-column 15, :macro true, :arglists (quote ([item value]))}, :name climbr.behaviour.climber_moves/def-, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/climber_moves.cljs", :end-column 15, :method-params ([&form &env item value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :macro true, :end-line 11, :max-fixed-arity 4, :fn-var true, :arglists (quote ([item value]))}, init-approaching-watch! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/climber_moves.cljs", :line 14, :column 7, :end-line 14, :end-column 30, :arglists (quote ([engine]))}, :name climbr.behaviour.climber_moves/init-approaching-watch!, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/climber_moves.cljs", :end-column 30, :method-params ([engine]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([engine]))}, set-hand-holds! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/climber_moves.cljs", :line 27, :column 7, :end-line 27, :end-column 22, :arglists (quote ([engine hand boulder]))}, :name climbr.behaviour.climber_moves/set-hand-holds!, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/climber_moves.cljs", :end-column 22, :method-params ([engine hand boulder]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 3, :fn-var true, :arglists (quote ([engine hand boulder]))}, update-hand-can-hold! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/climber_moves.cljs", :line 39, :column 7, :end-line 39, :end-column 28, :arglists (quote ([action hand boulder]))}, :name climbr.behaviour.climber_moves/update-hand-can-hold!, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/climber_moves.cljs", :end-column 28, :method-params ([action hand boulder]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 3, :fn-var true, :arglists (quote ([action hand boulder]))}, release-hand-holds! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/climber_moves.cljs", :line 49, :column 7, :end-line 49, :end-column 26, :arglists (quote ([hand bolder]))}, :name climbr.behaviour.climber_moves/release-hand-holds!, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/climber_moves.cljs", :end-column 26, :method-params ([hand bolder]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists (quote ([hand bolder]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:climber :remove :h1-holds :can-grab :or :components :with :off :watch :h2 :on :approaching :distance :h1 :add :h2-holds def}, :order [def :climber :h1 :h2 :components :watch :approaching :with :on :off :or :distance :add :remove :h1-holds :h2-holds :can-grab]}, :doc nil}