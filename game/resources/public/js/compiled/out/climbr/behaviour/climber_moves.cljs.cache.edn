;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name climbr.behaviour.climber_moves, :imports nil, :requires {m climbr.matter.matter, climbr.matter.matter climbr.matter.matter, a climbr.app_state, climbr.app_state climbr.app_state, k climbr.controls.keyboard, climbr.controls.keyboard climbr.controls.keyboard, u climbr.utils.utils, climbr.utils.utils climbr.utils.utils, cljs.core.async cljs.core.async}, :uses {<! cljs.core.async, chan cljs.core.async, tap cljs.core.async}, :defs {def- {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/climber_moves.cljs", :line 9, :column 11, :end-line 9, :end-column 15, :macro true, :arglists (quote ([item value]))}, :name climbr.behaviour.climber_moves/def-, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/climber_moves.cljs", :end-column 15, :method-params ([&form &env item value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :macro true, :end-line 9, :max-fixed-arity 4, :fn-var true, :arglists (quote ([item value]))}, init-boulder-touch-events! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/climber_moves.cljs", :line 12, :column 7, :end-line 12, :end-column 33, :arglists (quote ([engine]))}, :name climbr.behaviour.climber_moves/init-boulder-touch-events!, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/behaviour/climber_moves.cljs", :end-column 33, :method-params ([engine]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([engine]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:h1-holds :else :h2-holds def}, :order [def :else :h1-holds :h2-holds]}, :doc nil}