;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{println}, :name climbr.utils.utils, :imports nil, :requires {r reagi.core, reagi.core reagi.core}, :uses nil, :defs {watch-approaching! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :line 79, :column 7, :end-line 79, :end-column 25, :arglists (quote ([config]))}, :name climbr.utils.utils/watch-approaching!, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :end-column 25, :method-params ([config]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 1, :fn-var true, :arglists (quote ([config]))}, def- {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :line 5, :column 11, :end-line 5, :end-column 15, :macro true, :arglists (quote ([item value]))}, :name climbr.utils.utils/def-, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :end-column 15, :method-params ([&form &env item value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :macro true, :end-line 5, :max-fixed-arity 4, :fn-var true, :arglists (quote ([item value]))}, signal-from-property! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :line 23, :column 7, :end-line 23, :end-column 28, :arglists (quote ([prop]))}, :name climbr.utils.utils/signal-from-property!, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :end-column 28, :method-params ([prop]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([prop]))}, sqrt {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :line 34, :column 7, :end-line 34, :end-column 11, :arglists (quote ([x]))}, :name climbr.utils.utils/sqrt, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, println {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :line 12, :column 7, :end-line 12, :end-column 14, :arglists (quote ([x]))}, :name climbr.utils.utils/println, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, create-nearing-watch! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :line 64, :column 7, :end-line 64, :end-column 28, :arglists (quote ([threshold distance-watch])), :doc "creates watch(signal + data) detecting if two bodies are near or not"}, :name climbr.utils.utils/create-nearing-watch!, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :end-column 28, :method-params ([threshold distance-watch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 2, :fn-var true, :arglists (quote ([threshold distance-watch])), :doc "creates watch(signal + data) detecting if two bodies are near or not"}, debug {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :line 8, :column 7, :end-line 8, :end-column 12, :arglists (quote ([x]))}, :name climbr.utils.utils/debug, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, sqr {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :line 36, :column 7, :end-line 36, :end-column 10, :arglists (quote ([x]))}, :name climbr.utils.utils/sqr, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :end-column 10, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, create-body-position-watch! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :line 28, :column 7, :end-line 28, :end-column 34, :arglists (quote ([body])), :doc "creates watch(signal + data) body position"}, :name climbr.utils.utils/create-body-position-watch!, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :end-column 34, :method-params ([body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([body])), :doc "creates watch(signal + data) body position"}, cartesian-prod {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :line 74, :column 7, :end-line 74, :end-column 21, :arglists (quote ([col1 col2]))}, :name climbr.utils.utils/cartesian-prod, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :end-column 21, :method-params ([col1 col2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 2, :fn-var true, :arglists (quote ([col1 col2]))}, not-keyword? {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :line 19, :column 7, :end-line 19, :end-column 19, :arglists (quote ([val]))}, :name climbr.utils.utils/not-keyword?, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :end-column 19, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, create-distance-watch! {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :line 38, :column 7, :end-line 38, :end-column 29, :arglists (quote ([position-watches-pair])), :doc "from pair of body position watches creates a watch of body distances"}, :name climbr.utils.utils/create-distance-watch!, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :end-column 29, :method-params ([position-watches-pair]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([position-watches-pair])), :doc "from pair of body position watches creates a watch of body distances"}, without-keywords {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :line 21, :column 7, :end-line 21, :end-column 23, :arglists (quote ([col]))}, :name climbr.utils.utils/without-keywords, :variadic false, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :end-column 23, :method-params ([col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([col]))}, TODO {:protocol-inline nil, :meta {:file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :line 15, :column 11, :end-line 15, :end-column 15, :macro true, :arglists (quote ([& body])), :doc "Ignores body, yields nil", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}}, :name climbr.utils.utils/TODO, :variadic true, :file "/Users/ivp/dev/projects/climbr/climbr-node/game/src/climbr/utils/utils.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env body)], :arglists ([&form &env & body]), :arglists-meta (nil)}, :method-params [(&form &env body)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 15, :macro true, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists ([&form &env & body]), :doc "Ignores body, yields nil"}}, :require-macros {r reagi.core, reagi.core reagi.core}, :cljs.analyzer/constants {:seen #{:with :off :watch :on :approaching :distance :signal def :data}, :order [def :data :signal :watch :approaching :with :distance :on :off]}, :doc "Utilities"}