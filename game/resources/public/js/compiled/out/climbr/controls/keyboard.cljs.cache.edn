{:rename-macros {}, :renames {}, :use-macros {go cljs.core.async.macros}, :excludes #{}, :name climbr.controls.keyboard, :imports nil, :requires {cljs.core.async cljs.core.async}, :uses {<! cljs.core.async, chan cljs.core.async, mult cljs.core.async, put! cljs.core.async}, :defs {listen! {:protocol-inline nil, :meta {:file "/home/ivp/dev/workspaces/_etc/climbr-node/game/src/climbr/controls/keyboard.cljs", :line 5, :column 7, :end-line 5, :end-column 14, :arglists (quote ([el e fn]))}, :name climbr.controls.keyboard/listen!, :variadic false, :file "/home/ivp/dev/workspaces/_etc/climbr-node/game/src/climbr/controls/keyboard.cljs", :end-column 14, :method-params ([el e fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 3, :fn-var true, :arglists (quote ([el e fn]))}, event-to-direction {:protocol-inline nil, :meta {:file "/home/ivp/dev/workspaces/_etc/climbr-node/game/src/climbr/controls/keyboard.cljs", :line 8, :column 7, :end-line 8, :end-column 25, :arglists (quote ([e]))}, :name climbr.controls.keyboard/event-to-direction, :variadic false, :file "/home/ivp/dev/workspaces/_etc/climbr-node/game/src/climbr/controls/keyboard.cljs", :end-column 25, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, keypressed {:name climbr.controls.keyboard/keypressed, :file "/home/ivp/dev/workspaces/_etc/climbr-node/game/src/climbr/controls/keyboard.cljs", :line 22, :column 1, :end-line 22, :end-column 16, :meta {:file "/home/ivp/dev/workspaces/_etc/climbr-node/game/src/climbr/controls/keyboard.cljs", :line 22, :column 6, :end-line 22, :end-column 16}}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:release-right :down :hook-left :else :recur :up :release-both :right :hook-right :hook-both :release-left :left}, :order [:left :up :right :down :hook-right :hook-left :release-both :hook-both :release-right :release-left :recur :else]}, :doc nil}